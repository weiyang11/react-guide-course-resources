{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    isAuthenticated: false\n  },\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initailState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n\n//   if (action.type === 'increase'){\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     }\n//   }\n\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   }\n\n//   return state;\n// }\n\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","authSlice","name","initialState","isAuthenticated","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"sources":["/home/weiyang/code/weiyang11/react-guide-course-resources/code/19 Redux Basics/01-starting-project/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {isAuthenticated: false},\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n})\n\n// const counterReducer = (state = initailState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n\n//   if (action.type === 'increase'){\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     }\n//   }\n\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   }\n\n//   return state;\n// }\n\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: {counter: counterSlice.reducer, auth: authSlice.reducer}\n})\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAG9D,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAACC,eAAe,EAAE;EAAK,CAAC;EACtCC,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACH,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDI,MAAMA,CAACD,KAAK,EAAE;MACZA,KAAK,CAACH,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAMK,KAAK,GAAGT,cAAc,CAAC;EAC3BU,OAAO,EAAE;IAACC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAAEG,IAAI,EAAEZ,SAAS,CAACS;EAAO;AAClE,CAAC,CAAC;AACF,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGf,SAAS,CAACc,OAAO;AAC5C,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}